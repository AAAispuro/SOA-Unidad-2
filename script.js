function mostrarSeccion(id) {
  document.querySelectorAll("section").forEach(sec => sec.classList.remove("visible"));
  document.getElementById(id).classList.add("visible");
  if (id === "examen") reiniciarExamen();
}

let tipoExamen = "";
let preguntasSeleccionadas = [];

const bancoServicios = [
  { p: "Â¿QuÃ© es un servicio de tarea?", r: ["Gestiona datos del negocio", "Orquesta varios servicios para ejecutar un proceso", "Proporciona funciones tÃ©cnicas comunes"], c: 1 },
  { p: "Â¿CuÃ¡l de los siguientes es un ejemplo de servicio de entidad?", r: ["ServicioNotificaciones", "ServicioCliente", "ServicioCheckout"], c: 1 },
  { p: "Â¿QuÃ© tipo de servicio realiza operaciones CRUD?", r: ["Utilidad", "Tarea", "Entidad"], c: 2 },
  { p: "Â¿QuÃ© servicio tiene la mayor reutilizaciÃ³n?", r: ["Tarea", "Entidad", "Utilidad"], c: 2 },
  { p: "Â¿QuÃ© servicio envÃ­a un correo de confirmaciÃ³n?", r: ["Entidad", "Utilidad", "Tarea"], c: 1 },
  { p: "Â¿QuÃ© caracteriza a un servicio de tarea?", r: ["Alta reutilizaciÃ³n", "Orquesta varios servicios", "Funciones tÃ©cnicas simples"], c: 1 },
  { p: "Â¿QuÃ© servicio maneja datos del cliente?", r: ["Entidad", "Utilidad", "Tarea"], c: 0 },
  { p: "Â¿QuÃ© servicio ejecuta un flujo completo como 'procesar pedido'?", r: ["Tarea", "Entidad", "Utilidad"], c: 0 },
  { p: "Â¿QuÃ© servicio valida usuarios o envÃ­a SMS?", r: ["Entidad", "Tarea", "Utilidad"], c: 2 },
  { p: "Â¿QuÃ© servicio representa la informaciÃ³n del negocio?", r: ["Entidad", "Utilidad", "Tarea"], c: 0 }
];

const bancoMetodologias = [
  { p: "Â¿QuÃ© metodologÃ­a parte del negocio hacia la tecnologÃ­a?", r: ["Bottom-Up", "Top-Down", "Agile SOA"], c: 1 },
  { p: "Â¿CuÃ¡l metodologÃ­a comienza con sistemas existentes?", r: ["Top-Down", "Bottom-Up", "Meet-in-the-Middle"], c: 1 },
  { p: "Â¿QuÃ© metodologÃ­a combina Top-Down y Bottom-Up?", r: ["Meet-in-the-Middle", "SOMA", "Agile SOA"], c: 0 },
  { p: "Â¿QuÃ© metodologÃ­a fue desarrollada por IBM?", r: ["Agile SOA", "SOMA", "Top-Down"], c: 1 },
  { p: "Â¿QuÃ© metodologÃ­a integra Scrum?", r: ["Agile SOA", "Top-Down", "Meet-in-the-Middle"], c: 0 },
  { p: "Â¿QuÃ© ventaja tiene Top-Down?", r: ["Aprovecha sistemas existentes", "Alinea TI con el negocio", "Es la mÃ¡s rÃ¡pida"], c: 1 },
  { p: "Â¿QuÃ© desventaja tiene Bottom-Up?", r: ["Requiere mucho anÃ¡lisis", "Menor alineaciÃ³n con negocio", "Es costosa"], c: 1 },
  { p: "Â¿QuÃ© ventaja tiene Meet-in-the-Middle?", r: ["Equilibra negocio y tÃ©cnica", "Muy formal", "Barata"], c: 0 },
  { p: "Â¿QuÃ© ventaja tiene Agile SOA?", r: ["Mayor velocidad y flexibilidad", "Mayor formalidad", "Curva de aprendizaje alta"], c: 0 },
  { p: "Â¿QuÃ© fase pertenece a SOMA?", r: ["IdentificaciÃ³n de servicios", "Sprints Ã¡giles", "IntegraciÃ³n de APIs"], c: 0 }
];

function iniciarExamen(tipo) {
  tipoExamen = tipo;
  const contenedor = document.getElementById("contenedorPreguntas");
  contenedor.innerHTML = "";
  contenedor.classList.remove("oculto");
  document.getElementById("btnFinalizar").classList.remove("oculto");
  document.getElementById("menuExamen").classList.add("oculto");
  document.getElementById("resultado").innerHTML = "";
  document.getElementById("btnReintentar").classList.add("oculto");

  let banco = [];
  if (tipo === "servicios") banco = bancoServicios;
  else if (tipo === "metodologias") banco = bancoMetodologias;
  else banco = [...bancoServicios.slice(0, 5), ...bancoMetodologias.slice(0, 5)];

  preguntasSeleccionadas = [];
  while (preguntasSeleccionadas.length < 5) {
    const i = Math.floor(Math.random() * banco.length);
    if (!preguntasSeleccionadas.includes(banco[i])) preguntasSeleccionadas.push(banco[i]);
  }

  preguntasSeleccionadas.forEach((q, idx) => {
    const div = document.createElement("div");
    div.classList.add("pregunta");
    div.innerHTML = `<p>${idx + 1}. ${q.p}</p>`;
    q.r.forEach((op, j) => {
      div.innerHTML += `<label><input type="radio" name="p${idx}" value="${j}"> ${op}</label>`;
    });
    contenedor.appendChild(div);
  });
}

function finalizarExamen() {
  let aciertos = 0;
  const preguntas = document.querySelectorAll("#contenedorPreguntas .pregunta");
  preguntas.forEach((div, idx) => {
    const seleccionada = div.querySelector("input[type='radio']:checked");
    if (seleccionada && parseInt(seleccionada.value) === preguntasSeleccionadas[idx].c) {
      aciertos++;
    }
  });

  const porcentaje = (aciertos / preguntas.length) * 100;
  const resultado = document.getElementById("resultado");
  resultado.innerHTML = `
    <h3>Resultado:</h3>
    <p>Obtuviste <strong>${aciertos}/${preguntas.length}</strong> (${porcentaje.toFixed(0)}%)</p>
    ${porcentaje >= 80 ? "ðŸŽ‰ Â¡Excelente!" : "ðŸ’¡ Repasa el tema y vuelve a intentarlo."}
  `;

  document.getElementById("btnReintentar").classList.remove("oculto");
}

function nuevoIntento() {
  iniciarExamen(tipoExamen);
}

function reiniciarExamen() {
  document.getElementById("menuExamen").classList.remove("oculto");
  document.getElementById("contenedorPreguntas").classList.add("oculto");
  document.getElementById("btnFinalizar").classList.add("oculto");
  document.getElementById("resultado").innerHTML = "";
  document.getElementById("btnReintentar").classList.add("oculto");
}
